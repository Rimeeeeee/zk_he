name: Rust Benchmark CI

on:
  push:
    branches: [master]
  pull_request:
    branches: [master]
  workflow_dispatch:

jobs:
  benchmark:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        crate: [symmetric, homomorphic, transciphering, zk]

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Set up Rust (nightly)
        uses: actions-rs/toolchain@v1
        with:
          toolchain: nightly
          override: true

      - name: Install cargo-criterion
        run: cargo install cargo-criterion --force

      - name: Run benchmarks
        run: |
          cd crates/${{ matrix.crate }}
          cargo +nightly bench -- --nocapture

      - name: Append benchmark summary to root file
        run: |
          CRITERION_DIR="crates/${{ matrix.crate }}/target/criterion"
          ROOT_SUMMARY_FILE="$GITHUB_WORKSPACE/benchmark_summary.txt"
          echo "### Benchmark summary for ${{ matrix.crate }}" >> "$ROOT_SUMMARY_FILE"
          if [ -d "$CRITERION_DIR" ]; then
            for f in "$CRITERION_DIR"/*/new/estimates.json; do
              [ -f "$f" ] || continue
              name=$(jq -r '.id' $f)
              mean=$(jq -r '.mean.value' $f)
              unit=$(jq -r '.mean.unit' $f)
              echo "| $name | $mean $unit |" >> "$ROOT_SUMMARY_FILE"
            done
          else
            echo "No benchmark results found for ${{ matrix.crate }}" >> "$ROOT_SUMMARY_FILE"
          fi

      - name: Print root benchmark summary
        run: cat "$GITHUB_WORKSPACE/benchmark_summary.txt"

      - name: Upload benchmark results
        uses: actions/upload-artifact@v4
        with:
          name: benchmark-results-${{ matrix.crate }}
          path: benchmark_summary.txt
